import * as coda from '@codahq/packs-sdk';

export const pack = coda.newPack();

pack.addFormula({
  name: 'Hello',
  description: '',
  resultType: coda.ValueType.String,
  parameters: [coda.makeParameter({name: 'value', description: '', type: coda.ParameterType.String})],
  async execute([value]) {
    return `Hello ${value}`;
  },
});

// pack.addFormula({
//   name: 'BooleanToggle',
//   description: '',
//   resultType: coda.ValueType.Boolean,
//   codaType: coda.ValueHintType.Toggle,
//   parameters: [coda.makeParameter({name: 'value', description: '', type: coda.ParameterType.Boolean})],
//   async execute([value]) {
//     return value;
//   },
// });

// pack.addFormula({
//   name: 'ObjectWithBoolean',
//   description: '',
//   resultType: coda.ValueType.Object,
//   parameters: [],
//   schema: coda.makeObjectSchema({
//     idProperty: 'foo',
//     displayProperty: 'foo',
//     properties: {
//       foo: {type: coda.ValueType.String},
//       bar: {type: coda.ValueType.Boolean, codaType: coda.ValueHintType.Toggle},
//     },
//   }),
//   async execute() {
//     return {foo: 'hello toggle', bar: true};
//   },
// });

// pack.addColumnFormat({
//   name: 'BooleanFormat',
//   formulaName: 'BooleanToggle',
// });

// const MySchema = coda.makeObjectSchema({
//   properties: {
//     property1: {type: coda.ValueType.String},
//     property2: {type: coda.ValueType.Boolean, codaType: coda.ValueHintType.Toggle},
//     property3: {type: coda.ValueType.Boolean},
//   },
//   displayProperty: 'property1', // Which property above to display by default.
//   idProperty: 'property2', // Which property above is a unique ID.
// });

// pack.addSyncTable({
//   name: 'SyncWithBoolean',
//   description: '',
//   identityName: 'BooleanIdentity',
//   schema: MySchema,
//   formula: {
//     name: 'SyncWithBoolean',
//     description: '',
//     parameters: [],
//     async execute([]) {
//       return {
//         result: [{property1: 'hello2', property2: true, property3: true}],
//       };
//     },
//   },
// });
